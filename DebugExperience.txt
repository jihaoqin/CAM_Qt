[x]滑线系数可变
[x]名字设置有问题，triEdgePlane的名字有的是“triEdgeplane0”，有的是“plane0”，tee的setIDUsing也有问题。
[x]滑线系数下放到0.2
[x]增加配置文件，包括tee参数，带宽，滑线系数
[x]删除band时，更新bandend



2019/02/20
GLMemory的析构函数中的core指针变成了野指针。
原因：在关掉MainWindow后，GLWidget的析构函数比Mesh的析构函数早执行，造成了属于GLWidget的core指针变成了野指针，所以在Mesh的析构函数中调用core->glDelete...时，提示access violation.

管理GUI的按钮状态。
最好的方法是询问式，不是设定flag，设置flag导致变量过多，维护困难。

2019/02/24
设置QTextEdit相应mousePress操作时，无效。
详细：给QTextEdit安装了eventFilter,在Filter中判断了watched == textEdit的话并且event->type == QEvent::MousePressEvent就执行相关操作。但是绑定filter之后，在filter中打印输出发现
只有QEvent::focusIn,QEvent::paint这种event并没有MousePressEvent。
解决办法：给textEdit的viewport安装filter就行了，textEdit->viewport()->installEventFilter(this)
参考：
https://www.qtcentre.org/threads/8558-MousePressEvent-for-QTextEdit

2019/02/26
绘制圆形点
参考：
https://stackoverflow.com/questions/27098315/render-large-circular-points-in-modern-opengl

2019/02/27
TODO:
[checked] Data里面的updateBoundingBox还有问题，只只针对tee有用
[checked] Data里面的tee相关问题
Data里面的addPoint中root要改成当前工作指针
Ring,cylinder的西沟函数		
[checked] camera的旋转还有问题，旋转后的boundingBox的中心变了
	解决：原因：旋转操作设计的计算较多，可能出现了截断误差，导致计算前后的物体在相机坐标系下的重心发生了偏离。通过将最后的姿态矩阵中的位置信息设置同旋转前的姿态矩阵一样可以解决此问题。


2019/03/12
在求para的参数值时，发现了虽然四次方程有解，但是解不在圆环面上，函数中没有处理这种情况，因此没有返回值，导致默认的vector大小过大。
移动点的时候，总是出现鼠标指针和移动后的点位置偏差
在Ring.cpp中的intersectionPoints函数中可重现bug的数据
testPoint = glm::vec3(19.777084350585938, 3.0391998291015625, 10);

2019/03/15
用Edge去改写Ring里的判断代码，似得返回PosDir和边界

2019/03/16
在cpp文件的第一行提示语法错误：缺少“;”。是因为在.h 文件的类定义的最后一行忘了加";"，在被include 后，就在cpp 中报错了

2019/03/18
[checked]检查Ring, TriEdgePlane, Cylinder中的edge初始化
[checked]检查三个Assist中Edge的命名存在否
[checked]检查三个CurveAssist中的genCurve的返回值是否为vector<vector<PosDir>, vector<EdgePtr>>
[checked]在Cylinder中添加intersectionPoint

2019/03/19
[checked]构造TriEdgePlanCurve
[checked]构造CylinderCurve
[chekced]为各个Edge添加BoundBOX

2019/03/20
[checked]在move的过程中，点的meshId并没有改变
[checked]在Tee中构造Edge的拓扑关系
[checked]在查看TriEdgePlane的genCurve为什么会有折线段
其实折线段的是Ring上的东西，因为Ring的步长太长了，看起来有折线。
[checked]edge添加extend功能
	[checked] RingEdge
	[X] TriEdge
	[checked] Cylinder
[checked]滑动时总是偏移
在move里传入的不是nearPoint和dir而是nearPoint和farPoint。

2019/03/22
[checked]增加滑线系数

2019/03/23
[chekced]测试length为负数时，程序的正确性
[checked]在genCurve里增加length的参数
	[checked]cylinder
	[checked]triEdgeplane
	[checked]ring
[checked]提示智能指针Band不能转化为DataObjectPtr,这是因为在Controller.cpp中没有包含"Band.h"，但是编译器能够认出来Band类型，这是因为在“Controller.h"中有class Band。

2019/03/25
[checked]在显示带宽时，发生了诡异的现象。这是因为在生成点时，用了双重循环，循环变量都为i，在内层循环中本意是想使用外层循环的i，但是内层循环的i覆盖了外层循环的i导致出错。
[checked] 完成了带宽的显示
[checked] 高亮了带宽

2019/03/26
[checked] 生成对称的带
[checked]tree显示data里的Band。可删除，可变绿。
[checked]point和curve对于band来说更新了两次

2019/03/27
[checked]纱路的存储
	使用rapidjson完成的

2019/04/07
[checked]布满表面

2019/04/08
[checked] 本次在多开了一个线程给openBand操作后，出现了很多问题。打算做一个能够显示载入进度的提示框，这样能够知道到哪里了。由于一开始载入是在主线程中做的，导致了在循环载入时，无法发出信号。（载入操作时在controller中做的，不是从QObject继承而来，无法使用信号槽）。因此开了一个新线程。
在新线程中，调用了data->addBand这种操作，对data进行了修改。与此同时在主线程中的paintGL中也在读取data进行显示，每次addBand也会调用updateModel，这样导致了两个错误。一个是主线程读取data显示有时候会发生错误，可能是for(auto c:dataobject)中出现的错误吧，因为dataObject在新线程中是在改变的。第二个错误是addBand之后调用的updateModel有时候也会出错。（一开始是有时，后来是一定会出错）。一定会出错的原因是在新线程中改变了ui，而在Qt中只允许在主线程中更新ui。有时会出错的原因已经不可考证了。
因此解决办法是在新线程的添加band、point、curve的时候，加锁。注意不能再for循环外面加锁，因为在for循环外面加锁时，虽然说sum和left的signal依然能发出去，但是在主线程中，paintGL的锁将主线程阻塞了，导致这些信号也被阻塞了。只能等待新线程中的for循环结束了才能被处理，那么在我们看来就是left一下子跳到了0。